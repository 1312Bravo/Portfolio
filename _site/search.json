[
  {
    "objectID": "projects/training_log.html",
    "href": "projects/training_log.html",
    "title": "Training Log",
    "section": "",
    "text": "For me, the most logical thing in the world has always been mathematics—derivations and equations that can fully explain the conclusion. I bring the same mindset into many areas of life, not just running. This blog will be a place where I combine my passion for endurance sports with my professional background in data science, statistics, and analytics. Training logs, race preparation, and performance modeling—all of these can be enriched by numbers, models, and careful analysis.\nAnother motivation behind starting this blog is that I recently began working with a coach. That gave me an extra push to look deeper into how we are structuring the training, how I’m progressing, and to better understand the “why” behind what we’re doing. It’s not only about following workouts but also about making sense of the bigger picture, seeing how the plan unfolds, and how the numbers reflect adaptation and improvement.\nI don’t see data as something abstract, but as a tool for making sense of the effort I put into my body and mind. Numbers, when put into context, tell a story: whether I’m adapting, improving, or stepping into risky territory. That’s why each blog post will focus on a specific question and explore how mathematical thinking can bring clarity—whether it’s about training load (like in this post), heart rate, distance, or other aspects of performance.\nJust as I enjoy solving equations or structuring data models at work, I enjoy applying that same curiosity to my own training. For me, this is more than measuring kilometers or hours; it’s about uncovering the patterns that keep me progressing without breaking down. This blog is my way of sharing that journey—where mountains, trails, and bikes meet mathematics, analytics, and a touch of artistry.\n\nData\n\n\nIncrease your chances of staying away from running injuries\nPut today’s training into context by comparing it with your recent history or, looking forward, use that perspective to decide how much load to take on in your next session. The idea is to give yourself a clearer picture of whether you’re pushing into new territory or staying within safe limits. The goal is to help you understand your training load better, catch signs of overtraining early, and reduce the risk of injuries while keeping your progress moving forward."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Urh Peček",
    "section": "",
    "text": "Analysing training data with Python and Garmin data."
  },
  {
    "objectID": "index.html#featured-projects",
    "href": "index.html#featured-projects",
    "title": "Urh Peček",
    "section": "",
    "text": "Analysing training data with Python and Garmin data."
  },
  {
    "objectID": "projects/training_log/relative_training_load.html",
    "href": "projects/training_log/relative_training_load.html",
    "title": "Increase your chances of staying away from running injuries",
    "section": "",
    "text": "About\nSome days, a run feels effortless. The trails are forgiving, the legs respond, and every kilometer seems to pass in a blur. Other days, even a short loop feels heavy—your lungs burn, your legs ache, and you wonder if you should even have laced up. The same workout can feel different and has a different effect depending on what you’ve done in the days or weeks before. Raw distance, time or heart rate alone can be misleading when assessing effort.\nAs runners, we all experience these highs and lows. But what if there was a way to put today’s effort into context—to see whether you’re genuinely pushing your limits or simply running within what your body is ready for? That’s exactly the question this post explores: how to quantify your relative training load, so each run, ride, or session tells a story about progress, adaptation, and safety.\nIn this post, we’ll focus on one specific metric: normalizing today’s training load relative to your recent history. There are other metrics out there—each with its strengths and limitations—but here we’ll dive deep into this one approach. By comparing current sessions to your typical training patterns, you can get a clearer picture of whether you’re progressing safely or stepping into risky territory that could lead to overtraining or injury.\nWe’ll show how combining todays effort with recent averages and peak efforts can give a simple yet powerful metric, which gives you a data-driven perspective on every session.\nThe goal is to provide a simple, practical metric that helps answer questions like: - Am I pushing into new territory today? - Is my current load within a safe range based on what I’ve done in the past weeks? - Could this workout increase my risk of overtraining or injury if repeated too often?\nBy the end of this post, you’ll understand how to put each training session into context, see the bigger picture of your progress, and make informed decisions about how to plan future sessions safely and effectively.\n\n\nDeep dive\nWhen it comes to measuring today’s effort, there are several options: distance, time, heart rate, pace, or best combination of all of them. Each tells part of the story. Distance and time capture volume, heart rate reflects intensity, and pace shows how much stress you put on your muscles and joints. But taken alone, none of these gives the full picture.\nThat’s why we focus on training load, a metric that combines duration, intensity, and heart rate into a single number. It is provided from all of ours smart wearables. It’s a practical way to capture both volume and intensity in one value, making comparisons across very different sessions much more meaningful. Additionaly, because our main sport of interest is trail and mountain running, on trails, distance or pace can be misleading. There can be technical trails with steep climbs, uneven terrain and dangerous esctions, make it hard to judge intensity from speed or distance alone. Training load, however, tries to account for the actual physiological stress of a session, capturing how your body is working regardless of terrain. We will talk more about it in some upcoming posts.\nWhile training load is our main metric, the same approach can be applied to others—distance, time, or heart rate. By calculating relative values for each, we can see the story from multiple angles. Today’s high training load might coincide with a moderate distance or unusually high heart rate, offering deeper insight into how your body responded. Additional power comes when we combine these perspectives."
  },
  {
    "objectID": "projects/training_log/data.html",
    "href": "projects/training_log/data.html",
    "title": "Data",
    "section": "",
    "text": "Before diving into analysis, it’s worth showing where the numbers come from. I wanted a consistent and automated way to capture my training.\nTwo main datasets are daily updated and live in Google Sheets. Having the data in this format makes it easy to explore manually, but also gives me a flexible base for deeper analysis.\n\nTraining Log – workouts with different metrics, including distance, duration, elevation, heart rate.\nDaily Log – day-level statistics, such as steps, sleep, resting heart rate, recovery time, and other daily metrics.\n\nThe statistics come from the Garmin Connect API. A Python script fetches both activity and daily statistics, and then pushes them into the Google Sheets. Some metrics are raw Garmin values, while others are adjusted or calculated. The script is run each morning and spreadsheets expand by one more day of history (yesterday’s data), keeping the logs synchronized without manual work. The script can also loop through multiple accounts if provided.\nThe script relies two key integrations:\n\nGarmin Connect API – fetch activities and health metrics.\n\nfrom garminconnect import Garmin  \n\ngarminClient = Garmin(user_email, user_password)  \ngarminClient.login()\ngarminClient.get_activities_by_date(date_from, date_to)\n\nGoogle Sheets API – store and update logs.\n\nimport gspread\nfrom google.oauth2.service_account import Credentials  \n\ndrive_credentials = Credentials.from_service_account_file(\n    \"googleDrive_secrets.json\",  \n    scopes=[\"https://www.googleapis.com/auth/spreadsheets\",  \n            \"https://www.googleapis.com/auth/drive\"]  \n)\n\ngoogleDrive_client = gspread.authorize(drive_credentials)  \ngoogleDrive_client.open(user_dailyLogFilename)\nOf course, logging in requires credentials (emails, passwords, API keys). They are not hardcoded, but live in a .env file locally and as GitHub Secrets in the cloud, keeping sensitive content secure while still accessible for automation."
  }
]